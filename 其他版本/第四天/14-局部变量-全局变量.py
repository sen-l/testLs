
# 定义一个函数
def my_func1():
    # 定义一个局部变量
    # 定义在函数内部的变量，叫做局部变量
    # 局部变量的作用域（使用范围）在函数的内部，函数的外包无法使用
    num = 10
    print("局部变量my_func1: %d" % num)
# 调用函数
my_func1()

def my_func2():
    # 定一个局部变量
    num = 11
    print("局部变量my_func2: %d" % num)
# 调用函数
# 在函数内部定义的局部变量名可以和其他函数中的局部变量名相同，是不冲突的
my_func2()

# 定义在函数的外部的变量叫做全局变量
# 全局变量 或者 变量（作用域是在整个模块内使用）
num2 = 12
# 分部在两个函数内部使用了全局变量
def my_func3():
    # 其实是定义了一个和全局变量名相同的局部变量
    # 在函数内部如果使用一个变量，他先从函数内部找，如果有，直接使用
    # 如果函数内部没有找到，会到函数外部找（全局变量）
    # 如果还是没有找到，就报错
    num = 20
    print("局部变量my_func3: %d" % num)

my_func3()
print("外面的变量：%d" % num2)

def my_func4():
    # 标识这函数内部不是定义一个局部变量，其实是对全局变量的值进行修改
    global num2
    # 对全局变量的值进行修改
    num2 = 13
    print("全局变量my_func4: %d" % num2)

my_func4()
print("外面的变量：%d" % num2)
